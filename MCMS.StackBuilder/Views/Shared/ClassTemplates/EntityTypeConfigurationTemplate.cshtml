@using MCMS.StackBuilder.Stacks
@using MCMS.StackBuilder.Stacks.SubModels
@model MCMS.StackBuilder.Stacks.StackEntity
@{
    Layout = null;
    var eProps = Model.Properties
        .Where(p => p.Type == PropertyType.CustomType && p.IsEntityWithStack || p.Type == PropertyType.McmsFile)
        .ToList();
    var nleProps = eProps.Where(p => !p.IsList).ToList();
}
using MCMS.Base.Data.TypeConfig;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace @Model.GetNamespace()
{
public class @(Model.GetNameFor(ModelType.Entity))TypeConfig : EntityTypeConfiguration< @Model.GetNameFor(ModelType.Entity)>
{
public override void Configure(EntityTypeBuilder< @Model.GetNameFor(ModelType.Entity)> builder)
{
base.Configure(builder);
@foreach (var prop in nleProps)
{
    @if (prop.Required)
    {
        <text>
            builder.HasOne(e => e.@prop.Name).WithMany().IsRequired();
        </text>
    }
}
}
}
}