@using MCMS.StackBuilder.Stacks.SubModels
@using MCMS.StackBuilder.Stacks
@model MCMS.StackBuilder.Stacks.StackEntity
@{
    Layout = null;
    var includes = new List<string>
    {
        "System.ComponentModel.DataAnnotations",
        "MCMS.Base.Data.ViewModels",
        "MCMS.Base.Attributes.JsonConverters",
        "Newtonsoft.Json"
    };
}
<partial name="ClassTemplates/CommonUsingSection" model="(Model, includes)"/>

namespace @Model.GetNamespace()
{
[Display(Name = "@Model.Name")]
public class @Model.GetNameFor(ModelType.ViewModel) : ViewModel
{

@foreach (var prop in Model.Properties)
{
    if (!string.IsNullOrEmpty(prop.DisplayName))
    {
        @Html.Raw("[Display(Name=\"" + prop.DisplayName + "\")] \n")
    }
    if (prop.ShouldUseToStringJsonConverter())
    {
        @Html.Raw("[JsonConverter(typeof(ToStringJsonConverter))] \n")
    }
    @Html.Raw($"public {prop.GetTypeStr(ModelType.ViewModel)} {prop.Name} {{ get; set; }} \n")
}

public override string ToString()
{
return Id;
}
}
}